facet_grid(~album)
bp02
bp02 + scale_x_discrete(breaks = bp02$track_number,
labels = bp02$song_title)
bp02 + scale_x_discrete(breaks = ds02$track_number,
labels = ds02$song_title)
bp02 <- bp02 + scale_x_discrete(breaks = ds02$track_number,
labels = ds02$song_title)
bp01 | bp02
#### Section: Times played in concert ####
ds01 <- ds[ds$album == "Ten",]
ds02 <- ds[ds$album == "Vs.",]
bp01 <- ggplot(ds01,
aes(x = song_title,
y = as.numeric(times_played))) +
geom_bar(stat = "identity",
position = "stack",
color = "black",
fill = "blue")+
ylim(0, 875)+
labs(x = "",
y = "Times played live")+
theme_bw()+
theme(legend.position = "bottom",
axis.text.x = element_text(angle = 45,
hjust = 1))+
facet_grid(~album)
bp01 <- bp01 + scale_x_discrete(breaks = ds01$track_number,
labels = ds01$song_title)
bp01
bp01 <- ggplot(ds01,
aes(x = track_number,
y = as.numeric(times_played))) +
geom_bar(stat = "identity",
position = "stack",
color = "black",
fill = "blue")+
ylim(0, 875)+
labs(x = "",
y = "Times played live")+
theme_bw()+
theme(legend.position = "bottom",
axis.text.x = element_text(angle = 45,
hjust = 1))+
facet_grid(~album)
bp01 <- bp01 + scale_x_discrete(breaks = ds01$track_number,
labels = ds01$song_title)
bp01
bp02 <- ggplot(ds02,
aes(x = track_number,
y = as.numeric(times_played))) +
geom_bar(stat = "identity",
position = "stack",
color = "black",
fill = "black")+
ylim(0, 875)+
labs(x = "",
y = "Times played live")+
theme_bw()+
theme(legend.position = "bottom",
axis.text.x = element_text(angle = 45,
hjust = 1))+
facet_grid(~album)
bp02 <- bp02 + scale_x_discrete(breaks = ds02$track_number,
labels = ds02$song_title)
bp02
bp01 | bp02
bp02 <- ggplot(ds02,
aes(x = track_number,
y = as.numeric(times_played))) +
geom_bar(stat = "identity",
position = "stack",
color = "black",
fill = "black")+
ylim(0, 875)+
labs(x = "",
y = "")+
theme_bw()+
theme(legend.position = "bottom",
axis.text.x = element_text(angle = 45,
hjust = 1))+
facet_grid(~album)
bp02 <- bp02 + scale_x_discrete(breaks = ds02$track_number,
labels = ds02$song_title)
bp02
bp01 | bp02
(bp01 | bp02) + plot_annotation(title = "PJ live appearances")
(bp01 | bp02) + plot_annotation(title = "Live Appearances")
bp03 <- ggplot(ds01,
aes(x = track_number,
y = as.numeric(length_seconds))) +
geom_bar(stat = "identity",
position = "stack",
color = "black",
fill = "blue")+
ylim(0, 875)+
labs(x = "",
y = "Times played live")+
theme_bw()+
theme(legend.position = "bottom",
axis.text.x = element_text(angle = 45,
hjust = 1))+
facet_grid(~album)
bp01 <- bp01 + scale_x_discrete(breaks = ds01$track_number,
labels = ds01$song_title)
bp01
bp03 <- bp03 + scale_x_discrete(breaks = ds01$track_number,
labels = ds01$song_title)
bp03
bp03 <- ggplot(ds01,
aes(x = track_number,
y = as.numeric(length_seconds))) +
geom_bar(stat = "identity",
position = "stack",
color = "black",
fill = "blue")+
#ylim(0, 875)+
labs(x = "",
y = "Times played live")+
theme_bw()+
theme(legend.position = "bottom",
axis.text.x = element_text(angle = 45,
hjust = 1))+
facet_grid(~album)
bp03 <- bp03 + scale_x_discrete(breaks = ds01$track_number,
labels = ds01$song_title)
bp03
bp03 <- ggplot(ds01,
aes(x = track_number,
y = as.numeric(length_seconds))) +
geom_bar(stat = "identity",
position = "stack",
color = "black",
fill = "blue")+
#ylim(0, 875)+
labs(x = "",
y = "Length (minutes)")+
theme_bw()+
theme(legend.position = "bottom",
axis.text.x = element_text(angle = 45,
hjust = 1))+
facet_grid(~album)
bp03 <- bp03 + scale_x_discrete(breaks = ds01$track_number,
labels = ds01$song_title)
bp03
bp03 <- ggplot(ds01,
aes(x = track_number,
y = as.numeric(length_minutes))) +
geom_bar(stat = "identity",
position = "stack",
color = "black",
fill = "blue")+
#ylim(0, 875)+
labs(x = "",
y = "Length (minutes)")+
theme_bw()+
theme(legend.position = "bottom",
axis.text.x = element_text(angle = 45,
hjust = 1))+
facet_grid(~album)
bp03 <- bp03 + scale_x_discrete(breaks = ds01$track_number,
labels = ds01$song_title)
bp03
bp04 <- ggplot(ds02,
aes(x = track_number,
y = as.numeric(length_minutes))) +
geom_bar(stat = "identity",
position = "stack",
color = "black",
fill = "black")+
ylim(0, 875)+
labs(x = "",
y = "")+
theme_bw()+
theme(legend.position = "bottom",
axis.text.x = element_text(angle = 45,
hjust = 1))+
facet_grid(~album)
bp02 <- bp02 + scale_x_discrete(breaks = ds02$track_number,
labels = ds02$song_title)
bp04
bp04 <- ggplot(ds02,
aes(x = track_number,
y = as.numeric(length_minutes))) +
geom_bar(stat = "identity",
position = "stack",
color = "black",
fill = "black")+
#  ylim(0, 875)+
labs(x = "",
y = "")+
theme_bw()+
theme(legend.position = "bottom",
axis.text.x = element_text(angle = 45,
hjust = 1))+
facet_grid(~album)
bp04 <- bp04 + scale_x_discrete(breaks = ds02$track_number,
labels = ds02$song_title)
bp04
bp03 <- ggplot(ds01,
aes(x = track_number,
y = as.numeric(length_minutes))) +
geom_bar(stat = "identity",
position = "stack",
color = "black",
fill = "blue")+
ylim(0, 8)+
labs(x = "",
y = "Length in minutes")+
theme_bw()+
theme(legend.position = "bottom",
axis.text.x = element_text(angle = 45,
hjust = 1))+
facet_grid(~album)
bp03 <- bp03 + scale_x_discrete(breaks = ds01$track_number,
labels = ds01$song_title)
bp03
bp03 <- ggplot(ds01,
aes(x = track_number,
y = as.numeric(length_minutes))) +
geom_bar(stat = "identity",
position = "stack",
color = "black",
fill = "blue")+
ylim(0, 9)+
labs(x = "",
y = "Length in minutes")+
theme_bw()+
theme(legend.position = "bottom",
axis.text.x = element_text(angle = 45,
hjust = 1))+
facet_grid(~album)
bp03 <- bp03 + scale_x_discrete(breaks = ds01$track_number,
labels = ds01$song_title)
bp03
bp03 <- ggplot(ds01,
aes(x = track_number,
y = as.numeric(length_minutes))) +
geom_bar(stat = "identity",
position = "stack",
color = "black",
fill = "blue")+
ylim(0, 10)+
labs(x = "",
y = "Length in minutes")+
theme_bw()+
theme(legend.position = "bottom",
axis.text.x = element_text(angle = 45,
hjust = 1))+
facet_grid(~album)
bp03 <- bp03 + scale_x_discrete(breaks = ds01$track_number,
labels = ds01$song_title)
bp03
bp04 <- ggplot(ds02,
aes(x = track_number,
y = as.numeric(length_minutes))) +
geom_bar(stat = "identity",
position = "stack",
color = "black",
fill = "black")+
#  ylim(0, 875)+
labs(x = "",
y = "")+
theme_bw()+
theme(legend.position = "bottom",
axis.text.x = element_text(angle = 45,
hjust = 1))+
facet_grid(~album)
bp04 <- ggplot(ds02,
aes(x = track_number,
y = as.numeric(length_minutes))) +
geom_bar(stat = "identity",
position = "stack",
color = "black",
fill = "black")+
ylim(0, 10)+
labs(x = "",
y = "")+
theme_bw()+
theme(legend.position = "bottom",
axis.text.x = element_text(angle = 45,
hjust = 1))+
facet_grid(~album)
bp04 <- bp04 + scale_x_discrete(breaks = ds02$track_number,
labels = ds02$song_title)
bp04
(bp01 | bp02) + plot_annotation(title = "Live Appearances")
(bp01 | bp02) + plot_annotation(title = "Length of song")
(bp01 | bp02) + plot_annotation(title = "Song length")
(bp03 | bp04) + plot_annotation(title = "Song length")
p_song_length <- (bp03 | bp04) + plot_annotation(title = "Song length")
p_song_length
p <- live_appearances <- (bp01 | bp02) + plot_annotation(title = "Live Appearances")
p_live_appearances <- (bp01 | bp02) + plot_annotation(title = "Live Appearances")
p_live_appearances
p_live_appearances | p_song_length
p_live_appearances / p_song_length
p_song_length <- ((bp03 | bp04) + plot_annotation(title = "Song length"))
p_song_length
(p_live_appearances / p_song_length)
(p_live_appearances + plot_annotation(title = "Song length") / p_song_length)
p_live_appearances + plot_annotation(title = "Song length") / p_song_length
p_live_appearances / p_song_length
p_live_appearances
p_song_length
p_live_appearances
bp05 <- ggplot(ds01,
aes(x = track_number,
y = as.numeric(wordcount))) +
geom_bar(stat = "identity",
position = "stack",
color = "black",
fill = "blue")+
ylim(0, 10)+
labs(x = "",
y = "Length in minutes")+
theme_bw()+
theme(legend.position = "bottom",
axis.text.x = element_text(angle = 45,
hjust = 1))+
facet_grid(~album)
bp05 <- ggplot(ds01,
aes(x = track_number,
y = as.numeric(wordcount))) +
geom_bar(stat = "identity",
position = "stack",
color = "black",
fill = "blue")+
# ylim(0, 10)+
labs(x = "",
y = "Length in minutes")+
theme_bw()+
theme(legend.position = "bottom",
axis.text.x = element_text(angle = 45,
hjust = 1))+
facet_grid(~album)
bp05 <- bp05 + scale_x_discrete(breaks = ds01$track_number,
labels = ds01$song_title)
bp05
bp06 <- ggplot(ds02,
aes(x = track_number,
y = as.numeric(wordcount))) +
geom_bar(stat = "identity",
position = "stack",
color = "black",
fill = "black")+
# ylim(0, 10)+
labs(x = "",
y = "")+
theme_bw()+
theme(legend.position = "bottom",
axis.text.x = element_text(angle = 45,
hjust = 1))+
facet_grid(~album)
bp06 <- bp06 + scale_x_discrete(breaks = ds02$track_number,
labels = ds02$song_title)
bp06
bp05 <- ggplot(ds01,
aes(x = track_number,
y = as.numeric(wordcount))) +
geom_bar(stat = "identity",
position = "stack",
color = "black",
fill = "blue")+
# ylim(0, 10)+
labs(x = "",
y = "Word count")+
theme_bw()+
theme(legend.position = "bottom",
axis.text.x = element_text(angle = 45,
hjust = 1))+
facet_grid(~album)
bp05 <- bp05 + scale_x_discrete(breaks = ds01$track_number,
labels = ds01$song_title)
bp05
bp06 <- ggplot(ds02,
aes(x = track_number,
y = as.numeric(wordcount))) +
geom_bar(stat = "identity",
position = "stack",
color = "black",
fill = "black")+
# ylim(0, 10)+
labs(x = "",
y = "")+
theme_bw()+
theme(legend.position = "bottom",
axis.text.x = element_text(angle = 45,
hjust = 1))+
facet_grid(~album)
bp06 <- bp06 + scale_x_discrete(breaks = ds02$track_number,
labels = ds02$song_title)
bp06
p_wordcount <- ((bp05 | bp06) + plot_annotation(title = "Word count"))
p_wordcount
bp06 <- ggplot(ds02,
aes(x = track_number,
y = as.numeric(wordcount))) +
geom_bar(stat = "identity",
position = "stack",
color = "black",
fill = "black")+
ylim(0, 250)+
labs(x = "",
y = "")+
theme_bw()+
theme(legend.position = "bottom",
axis.text.x = element_text(angle = 45,
hjust = 1))+
facet_grid(~album)
bp06 <- bp06 + scale_x_discrete(breaks = ds02$track_number,
labels = ds02$song_title)
bp06
bp05 <- ggplot(ds01,
aes(x = track_number,
y = as.numeric(wordcount))) +
geom_bar(stat = "identity",
position = "stack",
color = "black",
fill = "blue")+
ylim(0, 250)+
labs(x = "",
y = "Word count")+
theme_bw()+
theme(legend.position = "bottom",
axis.text.x = element_text(angle = 45,
hjust = 1))+
facet_grid(~album)
bp05 <- bp05 + scale_x_discrete(breaks = ds01$track_number,
labels = ds01$song_title)
bp05
bp05 <- ggplot(ds01,
aes(x = track_number,
y = as.numeric(wordcount))) +
geom_bar(stat = "identity",
position = "stack",
color = "black",
fill = "blue")+
ylim(0, 220)+
labs(x = "",
y = "Word count")+
theme_bw()+
theme(legend.position = "bottom",
axis.text.x = element_text(angle = 45,
hjust = 1))+
facet_grid(~album)
bp05 <- bp05 + scale_x_discrete(breaks = ds01$track_number,
labels = ds01$song_title)
bp05
bp06 <- ggplot(ds02,
aes(x = track_number,
y = as.numeric(wordcount))) +
geom_bar(stat = "identity",
position = "stack",
color = "black",
fill = "black")+
ylim(0, 250)+
labs(x = "",
y = "")+
theme_bw()+
theme(legend.position = "bottom",
axis.text.x = element_text(angle = 45,
hjust = 1))+
facet_grid(~album)
bp06 <- ggplot(ds02,
aes(x = track_number,
y = as.numeric(wordcount))) +
geom_bar(stat = "identity",
position = "stack",
color = "black",
fill = "black")+
ylim(0, 220)+
labs(x = "",
y = "")+
theme_bw()+
theme(legend.position = "bottom",
axis.text.x = element_text(angle = 45,
hjust = 1))+
facet_grid(~album)
bp06 <- bp06 + scale_x_discrete(breaks = ds02$track_number,
labels = ds02$song_title)
bp06
p_wordcount <- ((bp05 | bp06) + plot_annotation(title = "Word count"))
p_wordcount
---
title: "Data Analysis and Visualization <br> Gambia Community Data"
## Clear R environment:
rm(list=ls())
## Set digit options:
options(digits = 2)
## Set the working directory
## Use the project directory (downloaded from GitHub) as the working directory:
## [This is going to be different depending on your system]:
setwd("~/Desktop/factor_analysis_R_workshop/")
## Clear R environment:
rm(list=ls())
## Set digit options:
options(digits = 2)
## Set the working directory
## Use the project directory (downloaded from GitHub) as the working directory:
## [This is going to be different depending on your system]:
setwd("~/Desktop/factor_analysis_R_workshop/")
## Install/load R libraries using the "pacman" R package:
## This is easier than library(package1), library(package2), etc..
if (!require("pacman")) install.packages("pacman")
pacman::p_load(tidyverse, lavaan, vtable,
psych, scales, corrplot,
ggthemes, ggcharts, patchwork)
## Import the dataset that we will be using for the workshop:
ds <- read_csv("data/fa_dataset.csv", show_col_types = F)
## Briefly go over the dataset, variables, codebook, etc.
vtable(ds)
