histfx02(ds, "leadership06")
## Create a "leadership" dataframe:
## Which has all 6 leadership items:
leadership <- cbind.data.frame(ds$leadership01, ds$leadership02,
ds$leadership03, ds$leadership04,
ds$leadership05, ds$leadership06)
names(leadership)
## Remove "ds$" from the column names:
names(leadership) <- sub('ds\\$', '', names(leadership))
names(leadership)
## Omit NA or missing values:
leadership <- na.omit(leadership)
## Examine correlation matrix:
mtx01 <- cor(leadership[, c(1:6)])
mtx01
## Examine correlation matrix:
mtx01 <- cor(leadership[, c(1:6)])
mtx01
corrplot(mtx01,
method = "number",
number.cex = 0.7,
col=c("white", "darkred", "red",
"darkgrey", "blue", "darkblue"))
## Kaiser-Meyer-Olkin factor adequacy test
KMO(r=cor(leadership))
## Bartlett's test:
cortest.bartlett(leadership)
## Parallel test
parallel <- fa.parallel(leadership)
## Two factor model:
fit01 <- factanal(leadership, 2, rotation="promax")
fit01
# single item measure
ogp01 <- ds %>% drop_na(history_discrimination) %>%
ggplot(aes(y = history_discrimination,
x = country))+
geom_boxplot(fill = "grey")+
labs(y = "Perceived discrimination",
x = "",
title = "Perceived history of discrimination by country")+
#facet_wrap(~Country, nrow = 2)+
coord_flip()+
theme_bw()
ogp01
## Kaiser-Meyer-Olkin factor adequacy test
KMO(r=cor(leadership))
## Bartlett's test of sphericity:
cortest.bartlett(leadership)
## Parallel test
parallel <- fa.parallel(leadership)
## Two factor model:
fit01 <- factanal(leadership, 2, rotation="promax")
fit01
#plot loadings for each factor
plot(
fit01$loadings[, 1],
fit02$loadings[, 2],
xlab = "Factor 1",
ylab = "Factor 2",
ylim = c(-1, 1),
xlim = c(-1, 1),
main = "Factor analysis of prostate data"
)
#plot loadings for each factor
plot(
fit01$loadings[, 1],
fit01$loadings[, 2],
xlab = "Factor 1",
ylab = "Factor 2",
ylim = c(-1, 1),
xlim = c(-1, 1),
main = "Factor analysis of prostate data"
)
abline(h = 0, v = 0)
#add column names to each point
text(
fit01$loadings[, 1] - 0.08,
fit01$loadings[, 2] + 0.08,
colnames(pros2),
col = "blue"
)
#add column names to each point
text(
fit01$loadings[, 1] - 0.08,
fit01$loadings[, 2] + 0.08,
colnames(leadership),
col = "blue"
)
#add column names to each point
text(
fit01$loadings[, 1] - 0.28,
fit01$loadings[, 2] + 0.28,
colnames(leadership),
col = "blue"
)
#plot loadings for each factor
plot(
fit01$loadings[, 1],
fit01$loadings[, 2],
xlab = "Factor 1",
ylab = "Factor 2",
ylim = c(-1, 1),
xlim = c(-1, 1),
main = "Factor analysis of prostate data"
)
abline(h = 0, v = 0)
#add column names to each point
text(
fit01$loadings[, 1] - 0.28,
fit01$loadings[, 2] + 0.28,
colnames(leadership),
col = "blue"
)
#add column names to each point
text(
fit01$loadings[, 1] - 0.128,
fit01$loadings[, 2] + 0.128,
colnames(leadership),
col = "blue"
)
#plot loadings for each factor
plot(
fit01$loadings[, 1],
fit01$loadings[, 2],
xlab = "Factor 1",
ylab = "Factor 2",
ylim = c(-1, 1),
xlim = c(-1, 1),
main = "Factor analysis of prostate data"
)
abline(h = 0, v = 0)
#add column names to each point
text(
fit01$loadings[, 1] - 0.128,
fit01$loadings[, 2] + 0.128,
colnames(leadership),
col = "blue"
)
## Two factor model:
fit01 <- factanal(leadership, 2, rotation="promax")
fit01
#plot loadings for each factor
plot(
fit01$loadings[, 1],
fit01$loadings[, 2],
xlab = "Factor 1",
ylab = "Factor 2",
ylim = c(-1, 1),
xlim = c(-1, 1),
main = "Factor analysis of prostate data"
)
abline(h = 0, v = 0)
#add column names to each point
text(
fit01$loadings[, 1] - 0.128,
fit01$loadings[, 2] + 0.128,
colnames(leadership),
col = "blue"
)
fir01
fit01
## Now, we can examine the "reliability" of each constructs represented by two factors:
BCL <- cbind.data.frame(ds$leaderhsip01, ds$leadership02, ds$leadership03)
## Now, we can examine the "reliability" of each constructs represented by two factors:
BCL <- cbind.data.frame(ds$leaderssip01, ds$leadership02, ds$leadership03)
## Now, we can examine the "reliability" of each constructs represented by two factors:
BCL <- cbind.data.frame(ds$leadership01, ds$leadership02, ds$leadership03)
alph01 <- psych::alpha(end_bcl)
alph01 <- psych::alpha(BCL)
summary(alph01)
(alph01)
summary(alph01)
BBL <- cbind.data.frame(ds$leadership04, ds$leadership05, ds$leadership06)
alph02 <- psych::alpha(BBL)
alph02
summary(alph02)
summary(alph01)
names(leadership)
# correlated two factor solution, marker method
names(leadership)
## Create two factor structure:
twofacs <- 'BCL =~ leadership01+leadership02+leadership03
BBL =~ leadership04+leadership05+leadership06'
## Fit the model:
cfa01 <- cfa(twofacs,
data=imagistic,
std.lv=TRUE)
## Fit the model:
cfa01 <- cfa(twofacs,
data = leadership,
std.lv = TRUE)
summary(cfa01,
fit.measures = TRUE,
standardized = TRUE)
cfa01
ds$BCL <- (ds$leadership01+ds$leadership02+ds$leadership03)/3
ds$BBL <- (ds$leadership04+ds$leadership05+ds$leadership06)/3
histfx01(ds, "BCL")
histfx02(ds, "BCL")
## Visualize barrier crossing leadership:
summary(ds$BCL)
histfx01(ds, "BCL")
histfx02(ds, "BCL")
## Visualize barrier bound leadership:
summary(ds$BBL)
histfx01(ds, "BBL")
histfx02(ds, "BBL")
bp02 <- ds %>% drop_na(BCL, BBL) %>%
ggplot(aes(y = BCL,
x = gender))+
geom_boxplot(fill = "grey")+
labs(y = "Age",
x = "",
title = "Age and gender distribution by country")+
facet_wrap(~country, nrow = 2)+
coord_flip()+
theme_bw()
bp02
bp02 <- ds %>% drop_na(BCL, BBL, gender) %>%
ggplot(aes(y = BCL,
x = gender))+
geom_boxplot(fill = "grey")+
labs(y = "Age",
x = "",
title = "Age and gender distribution by country")+
facet_wrap(~country, nrow = 2)+
coord_flip()+
theme_bw()
bp02
bp03 <- ds %>% drop_na(BCL, BBL, gender) %>%
ggplot(aes(y = BCL,
x = gender))+
geom_boxplot(fill = "grey")+
labs(y = "Age",
x = "",
title = "Gender differences in endorsement of BCL by country")+
coord_flip()+
theme_bw()
bp03
bp02 <- ds %>% drop_na(BCL, BBL, gender) %>%
ggplot(aes(y = BCL,
x = gender))+
geom_boxplot(fill = "grey")+
labs(y = "Age",
x = "",
title = "Gender differences in endorsement of BCL")+
coord_flip()+
theme_bw()
bp02
bp02 <- ds %>% drop_na(BCL, BBL, gender) %>%
ggplot(aes(y = BCL,
x = gender))+
geom_boxplot(fill = "grey")+
labs(y = "Age",
x = "",
title = "Gender differences in endorsement of BCL")+
facet_wrap(~country, nrow = 2)+
coord_flip()+
theme_bw()
bp02
bp02 <- ds %>% drop_na(BCL, BBL, gender) %>%
ggplot(aes(y = BCL,
x = gender))+
geom_boxplot(fill = "grey")+
labs(y = "Age",
x = "",
title = "Gender differences in endorsement of BCL")+
coord_flip()+
theme_bw()
bp02
bp03 <- ds %>% drop_na(BCL, BBL, gender) %>%
ggplot(aes(y = BCL,
x = gender))+
geom_boxplot(fill = "grey")+
labs(y = "Age",
x = "",
title = "Gender differences in endorsement of BCL by country")+
facet_wrap(~country, nrow = 2)+
coord_flip()+
theme_bw()
bp03
bp04 <- ds %>% drop_na(BCL, BBL, gender) %>%
ggplot(aes(y = BBL,
x = gender))+
geom_boxplot(fill = "grey")+
labs(y = "Age",
x = "",
title = "Gender differences in endorsement of BBL")+
coord_flip()+
theme_bw()
bp04
bp05 <- ds %>% drop_na(BCL, BBL, gender) %>%
ggplot(aes(y = BBL,
x = gender))+
geom_boxplot(fill = "grey")+
labs(y = "Age",
x = "",
title = "Gender differences in endorsement of BCL by country")+
facet_wrap(~country, nrow = 2)+
coord_flip()+
theme_bw()
bp05 <- ds %>% drop_na(BCL, BBL, gender) %>%
ggplot(aes(y = BBL,
x = gender))+
geom_boxplot(fill = "grey")+
labs(y = "Age",
x = "",
title = "Gender differences in endorsement of BBL by country")+
facet_wrap(~country, nrow = 2)+
coord_flip()+
theme_bw()
bp05
bp02 <- ds %>% drop_na(BCL, BBL, gender) %>%
ggplot(aes(y = BCL,
x = gender))+
geom_boxplot(fill = "grey")+
labs(y = "BCL",
x = "",
title = "Gender differences in endorsement of BCL")+
coord_flip()+
theme_bw()
bp02
bp03 <- ds %>% drop_na(BCL, BBL, gender) %>%
ggplot(aes(y = BCL,
x = gender))+
geom_boxplot(fill = "grey")+
labs(y = "BCL",
x = "",
title = "Gender differences in endorsement of BCL by country")+
facet_wrap(~country, nrow = 2)+
coord_flip()+
theme_bw()
bp03
bp04 <- ds %>% drop_na(BCL, BBL, gender) %>%
ggplot(aes(y = BBL,
x = gender))+
geom_boxplot(fill = "grey")+
labs(y = "BBL",
x = "",
title = "Gender differences in endorsement of BBL")+
coord_flip()+
theme_bw()
bp04
bp05 <- ds %>% drop_na(BCL, BBL, gender) %>%
ggplot(aes(y = BBL,
x = gender))+
geom_boxplot(fill = "grey")+
labs(y = "BBL",
x = "",
title = "Gender differences in endorsement of BBL by country")+
facet_wrap(~country, nrow = 2)+
coord_flip()+
theme_bw()
bp05
bp04 <- ds %>% drop_na(BCL, BBL, gender) %>%
ggplot(aes(y = BBL,
x = country))+
geom_boxplot(fill = "grey")+
labs(y = "BBL",
x = "",
title = "Gender differences in endorsement of BBL")+
coord_flip()+
theme_bw()
bp04
bp04 <- ds %>% drop_na(BCL, BBL, gender) %>%
ggplot(aes(y = BBL,
x = country))+
geom_boxplot(fill = "grey")+
labs(y = "BBL",
x = "",
title = "Differences in endorsement of BBL by country")+
coord_flip()+
theme_bw()
bp04
bp05 <- ds %>% drop_na(BCL, BBL, gender) %>%
ggplot(aes(y = BBL,
x = gender))+
geom_boxplot(fill = "grey")+
labs(y = "BBL",
x = "",
title = "Gender differences in endorsement of BBL by country")+
facet_wrap(~country, nrow = 2)+
coord_flip()+
theme_bw()
bp05
bp02 <- ds %>% drop_na(BCL, BBL, gender) %>%
ggplot(aes(y = BCL,
x = country))+
geom_boxplot(fill = "grey")+
labs(y = "BCL",
x = "",
title = "Differences in endorsement of BCL")+
coord_flip()+
theme_bw()
bp02
bp02 <- ds %>% drop_na(BCL, BBL, gender) %>%
ggplot(aes(y = BCL,
x = country))+
geom_boxplot(fill = "grey")+
labs(y = "BCL",
x = "",
title = "Differences in endorsement of BCL by country")+
coord_flip()+
theme_bw()
bp02
bp02 <- ds %>% drop_na(BCL, BBL, gender) %>%
ggplot(aes(y = BCL,
x = country))+
geom_boxplot(fill = "grey")+
labs(y = "BCL",
x = "",
title = "Endorsement of BCL by country")+
coord_flip()+
theme_bw()
bp02
bp03 <- ds %>% drop_na(BCL, BBL, gender) %>%
ggplot(aes(y = BCL,
x = gender))+
geom_boxplot(fill = "grey")+
labs(y = "BCL",
x = "",
title = "Gender differences in endorsement of BCL by country")+
facet_wrap(~country, nrow = 2)+
coord_flip()+
theme_bw()
bp03
bp04 <- ds %>% drop_na(BCL, BBL, gender) %>%
ggplot(aes(y = BBL,
x = country))+
geom_boxplot(fill = "grey")+
labs(y = "BBL",
x = "",
title = "Differences in endorsement of BBL by country")+
coord_flip()+
theme_bw()
bp04 <- ds %>% drop_na(BCL, BBL, gender) %>%
ggplot(aes(y = BBL,
x = country))+
geom_boxplot(fill = "grey")+
labs(y = "BBL",
x = "",
title = "Endorsement of BBL by country")+
coord_flip()+
theme_bw()
bp04
bp05 <- ds %>% drop_na(BCL, BBL, gender) %>%
ggplot(aes(y = BBL,
x = gender))+
geom_boxplot(fill = "grey")+
labs(y = "BBL",
x = "",
title = "Gender differences in endorsement of BBL by country")+
facet_wrap(~country, nrow = 2)+
coord_flip()+
theme_bw()
bp05
## Fit the model:
cfa01 <- cfa(twofacs,
data = leadership,
std.lv = TRUE)
summary(cfa01,
fit.measures = TRUE,
standardized = TRUE)
rm(list=ls())
options(digits = 2)
## Set the working directory
## Use the project directory (downloaded from GitHub) as the working directory:
## [This is going to be different depending on your system]:
setwd("~/Desktop/factor_analysis_R_workshop/")
## Install/load R libraries using the "pacman" R package:
## This is easier than library(package1), library(package2), etc..
if (!require("pacman")) install.packages("pacman")
pacman::p_load(tidyverse, lavaan, vtable,
psych, scales, corrplot,
ggthemes, ggcharts, patchwork)
## Import the dataset that we will be using for the workshop:
ds <- read_csv("data/fa_dataset.csv", show_col_types = F)
## Briefly go over the dataset, variables, codebook, etc.
vtable(ds)
## Variable: Sample size by Country
tbl01 <- table(ds$country)
tbl01
## Filter individual country datasets:
dsgmb <- ds %>% filter(country == "Gambia")
dspak <- ds %>% filter(country == "Pakistan")
dstza <- ds %>% filter(country == "Tanzania")
dsuga <- ds %>% filter(country == "Uganda")
rm(list=ls())
options(digits = 2)
## Set the working directory
## Use the project directory (downloaded from GitHub) as the working directory:
## [This is going to be different depending on your system]:
setwd("~/Desktop/factor_analysis_R_workshop/")
## Install/load R libraries using the "pacman" R package:
## This is easier than library(package1), library(package2), etc..
if (!require("pacman")) install.packages("pacman")
pacman::p_load(tidyverse, lavaan, vtable,
psych, scales, corrplot,
ggthemes, ggcharts, patchwork)
```{r}
## Import the dataset that we will be using for the workshop:
ds <- read_csv("data/fa_dataset.csv", show_col_types = F)
## Briefly go over the dataset, variables, codebook, etc.
vtable(ds)
## Variable: Sample size by Country
tbl01 <- table(ds$country)
tbl01
## Filter individual country datasets:
dsgmb <- ds %>% filter(country == "Gambia")
dspak <- ds %>% filter(country == "Pakistan")
dstza <- ds %>% filter(country == "Tanzania")
dsuga <- ds %>% filter(country == "Uganda")
