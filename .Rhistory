fill = "red",
bins = 36,
binwidth = 0.80)+
scale_x_date(labels = date_format("%m-%d"),
date_breaks = "2 days",
limits = c(Sys.Date() - 60, NA))+
ylim(0, 14)+
labs(y = "Applications rejected",
x = "Date",
title = "Rejections")+
theme_bw()+
theme(legend.position = "bottom",
axis.text.x = element_text(angle = 45, hjust = 1))
bp02
bp01 / bp02
pacman::p_load(tidyverse, data.table, readxl,
vtable, scales, lubridate, patchwork)
df <- read_excel("/home/gagan/Desktop/job_applications/apps_23-24/applications_checklist.xls")
vtable(df)
names(df)
table(df$Decision)
df$Decision <- ifelse(df$Decision == "Rejected", "Rejected",
"Under Consideration")
table(df$Decision)
df$Decision <- ifelse(df$Decision == "Rejected", "Rejected",
"Under Consideration")
table(df$Decision)
df$Decision <- ifelse(df$Decision == "Rejected", "Rejected",
"Under Consideration")
table(df$Decision)
df$Decision2 <- ifelse(is.na(df$Decision) == T, "Under Consideration", "Rejected")
table(df$Decision2)
is.na(df$Decision)
table(df$Decision)
df$Decision <- ifelse(is.na(df$Decision) == T, "Under Consideration", "Rejected")
table(df$Decision)
df$Date_decision <- as.Date(df$Date_decision)
df$Date_submission <- as.Date(df$Date_submission)
bp01 <- ggplot(df,
aes(x=Date_submission))+
geom_histogram(color = "black",
fill = "blue",
bins = 60,
binwidth = 0.80)+
scale_x_date(labels = date_format("%m-%d"),
date_breaks = "2 days",
limits = c(Sys.Date() - 60, NA)) +
ylim(0, 14)+
labs(y = "Applications submitted",
x = "Date",
title = "Submissions")+
theme_bw()+
theme(legend.position = "bottom",
axis.text.x = element_text(angle = 45, hjust = 1))
bp01
bp02 <- ggplot(df,
aes(x=Date_decision))+
geom_histogram(color = "black",
fill = "red",
bins = 36,
binwidth = 0.80)+
scale_x_date(labels = date_format("%m-%d"),
date_breaks = "2 days",
limits = c(Sys.Date() - 60, NA))+
ylim(0, 14)+
labs(y = "Applications rejected",
x = "Date",
title = "Rejections")+
theme_bw()+
theme(legend.position = "bottom",
axis.text.x = element_text(angle = 45, hjust = 1))
bp02
bp01 / bp02
library(ggplot2)
ggplot(airquality, aes(Temp, Ozone)) +
geom_smooth(method = "loe
# Import libraries:
library(ggplot2)
ggplot(airquality, aes(Temp, Ozone)) +
geom_point() +
geom_smooth(method = "loess")
ggplot(airquality, aes(Temp, Ozone)) +
geom_point() +
geom_smooth(method = "loess")
library(ggplot2)
ggplot(airquality, aes(Temp, Ozone)) +
geom_point() +
geom_smooth(method = "loess")
ggplot(airquality, aes(Temp, Ozone)) +
geom_point() +
geom_smooth(method = "loess")
ggplot(airquality, aes(Temp,
Ozone)) +
geom_point() +
geom_smooth(method = "loess")
library(tidyverse)
library(data.table)
ds02 <- fread("/home/gagan/Desktop/common/old_projects/PolPsychWEIRDProject/dissertationdata.csv")
View(ds02)
rm(list=ls())
options(digits = 2)
## Load R packages:
pacman::p_load(tidyverse, haven, labelled, vtable,
psych, scales, weights, clipr, forcats,
stargazer, ggthemes, ggcharts, geomtextpath,
corrplot, tm, gt, lme4, car, lmerTest,
ggeffects, magrittr, broom, broom.mixed)
## Import BCL dataset:
ds <- read_sav("/home/gagan/Desktop/common/old_projects/oxford_2023/data/BCL/BCL Dataset.sav")
ds <- as.data.table(ds)
## Remove cases with no country:
ds <- ds[!is.na(ds$Country),]
ds$Country <- as.character(haven::as_factor(ds$Country))
ds <- ds[!(ds$Country == "USA"), ]
table(ds$Country)
ds$CountryID <- ifelse(ds$Country == "Bangladesh", "01",
ifelse(ds$Country == "Ghana", "02",
ifelse(ds$Country == "Malawi", "03",
ifelse(ds$Country == "Pakistan", "04",
ifelse(ds$Country == "Sierra Leone", "05",
ifelse(ds$Country == "Tanzania", "06",
ifelse(ds$Country == "Uganda", "07", NA)))))))
table(ds$Country)
## Import BCL dataset:
ds <- read_sav("/home/gagan/Desktop/common/old_projects/oxford_2023/data/BCL/BCL Dataset.sav")
ds <- as.data.table(ds)
## Remove cases with no country:
ds <- ds[!is.na(ds$Country),]
ds$Country <- as.character(haven::as_factor(ds$Country))
#ds <- ds[!(ds$Country == "USA"), ]
table(ds$Country)
ds <- ds[!(ds$Country == "USA"), ]
table(ds$Country)
ds$CountryID <- ifelse(ds$Country == "Bangladesh", "01",
ifelse(ds$Country == "Ghana", "02",
ifelse(ds$Country == "Malawi", "03",
ifelse(ds$Country == "Pakistan", "04",
ifelse(ds$Country == "Sierra Leone", "05",
ifelse(ds$Country == "Tanzania", "06",
ifelse(ds$Country == "Uganda", "07", NA)))))))
table(ds$Country)
ds02 <- ds[(ds$Country == c("Bangladesh", "Pakistan",
"Ghana", "Tanzania")), ]
ds02 <- ds[(ds$Country %in% c("Bangladesh", "Pakistan",
"Ghana", "Tanzania")), ]
table(ds02$Country)
fwrite(ds02, file = "~/Desktop/fa_dataset.csv")
table(ds02$Country)
## Clear R environment:
rm(list=ls())
## Set digit options:
options(digits = 2)
## Set the working directory
## Use the project directory (downloaded from GitHub) as the working directory:
## [This is going to be different depending on your system]:
setwd("~/Desktop/factor_analysis_R_workshop/")
## Install/load R libraries using the "pacman" R package:
## This is easier than library(package1), library(package2), etc..
if (!require("pacman")) install.packages("pacman")
pacman::p_load(tidyverse, lavaan, vtable,
psych, scales, corrplot,
ggthemes, ggcharts, patchwork)
## Import the dataset that we will be using for the workshop:
ds <- read_csv("data/fa_dataset.csv", show_col_types = F)
## Demographic Variables:
## gender:
ds$gender <- ifelse(ds$gender == "Male", "Male",
ifelse(ds$gender == "Female", "Female", NA))
## ses:
ds$ses <- ifelse(ds$ses == "", NA, ds$ses)
## jobnature:
ds$jobnature <- ifelse(ds$jobnature == "", NA, ds$jobnature)
#sentence case for jobnature:
ds$jobnature <- gsub("(\\D)(\\D+)", "\\U\\1\\L\\2", ds$jobnature, perl = TRUE)
ds$jobnature <- ifelse(ds$jobnature == "Non-government/self-employed",
"Non-government", ds$jobnature)
## Religion:
ds$religion <- ifelse(ds$religion == "", NA, ds$religion)
ds$religion <- ifelse(ds$religion == "Christian (Catholic)", "Christian: Catholic",
ifelse(ds$religion == "Christian (Protestant)", "Christian: Protestant",
ifelse(ds$religion == "Muslim (Shia)", "Muslim: Shia",
ifelse(ds$religion == "Muslim (Sunni)", "Muslim: Sunni", ds$religion))))
ds$married <- ifelse(ds$married == "Not married", "Unmarried", ds$married)
ds$married <- ifelse(ds$married == "", NA, ds$married)
## Individual country datasets:
dsgmb <- ds[ds$Country == "Gambia", ]
dspak <- ds[ds$Country == "Pakistan", ]
dstza <- ds[ds$Country == "Tanzania", ]
dsuga <- ds[ds$Country == "Uganda", ]
```{r, error = F, message = F, warning = F}
tbl01 <- table(ds$country)
## Table of user language by country:
tbl01
## Variable: Sample size by Country
tbl01 <- table(ds$Country)
tbl01
lp01 <- ds %>%
# drop_na(Country) %>%
lollipop_chart(x = Country,
line_color = "black",
point_color = "black")+
labs(y = "Frequency",
x = "",
title = "Sample size by country")+
theme_bw()
lp01
summary(ds$age)
ds %>% drop_na(age)%>%
ggplot(aes(x = age))+
geom_histogram(color = "black",
fill = "gray",
bins = 50)+
geom_textvline(label = "Mean = 37.00",
xintercept = 37.00,
vjust = 1.1,
lwd = 1.05,
linetype = 2)+
labs(x = "Age",
y = "Frequency",
title = "Age distribution (full sample)")+
theme_bw()
ds %>% drop_na(age)%>%
ggplot(aes(x = age))+
geom_histogram(color = "black",
fill = "gray",
bins = 50)+
labs(x = "Age",
y = "Frequency",
title = "Age distribution (full sample)")+
theme_bw()
ds %>% drop_na(age)%>%
ggplot(aes(x = age))+
geom_histogram(color = "black",
fill = "gray",
bins = 50)+
labs(x = "Age",
y = "Frequency",
title = "Age distribution by country")+
facet_wrap(~country, nrow = 2)+
theme_bw()
## Clear R environment:
rm(list=ls())
## Set digit options:
options(digits = 2)
## Set the working directory
## Use the project directory (downloaded from GitHub) as the working directory:
## [This is going to be different depending on your system]:
setwd("~/Desktop/factor_analysis_R_workshop/")
## Install/load R libraries using the "pacman" R package:
## This is easier than library(package1), library(package2), etc..
if (!require("pacman")) install.packages("pacman")
pacman::p_load(tidyverse, lavaan, vtable,
psych, scales, corrplot,
ggthemes, ggcharts, patchwork)
## Import the dataset that we will be using for the workshop:
ds <- read_csv("data/fa_dataset.csv", show_col_types = F)
## Demographic Variables:
## gender:
ds$gender <- ifelse(ds$gender == "Male", "Male",
ifelse(ds$gender == "Female", "Female", NA))
## ses:
ds$ses <- ifelse(ds$ses == "", NA, ds$ses)
## jobnature:
ds$jobnature <- ifelse(ds$jobnature == "", NA, ds$jobnature)
#sentence case for jobnature:
ds$jobnature <- gsub("(\\D)(\\D+)", "\\U\\1\\L\\2", ds$jobnature, perl = TRUE)
ds$jobnature <- ifelse(ds$jobnature == "Non-government/self-employed",
"Non-government", ds$jobnature)
## Religion:
ds$religion <- ifelse(ds$religion == "", NA, ds$religion)
ds$religion <- ifelse(ds$religion == "Christian (Catholic)", "Christian: Catholic",
ifelse(ds$religion == "Christian (Protestant)", "Christian: Protestant",
ifelse(ds$religion == "Muslim (Shia)", "Muslim: Shia",
ifelse(ds$religion == "Muslim (Sunni)", "Muslim: Sunni", ds$religion))))
ds$married <- ifelse(ds$married == "Not married", "Unmarried", ds$married)
ds$married <- ifelse(ds$married == "", NA, ds$married)
## Individual country datasets:
dsgmb <- ds[ds$Country == "Gambia", ]
dspak <- ds[ds$Country == "Pakistan", ]
dstza <- ds[ds$Country == "Tanzania", ]
dsuga <- ds[ds$Country == "Uganda", ]
## Variable: Sample size by Country
tbl01 <- table(ds$Country)
tbl01
lp01 <- ds %>%
lollipop_chart(x = Country,
line_color = "black",
point_color = "black")+
labs(y = "Frequency",
x = "",
title = "Sample size by country")+
theme_bw()
lp01
summary(ds$age)
ds %>% drop_na(age)%>%
ggplot(aes(x = age))+
geom_histogram(color = "black",
fill = "gray",
bins = 50)+
labs(x = "Age",
y = "Frequency",
title = "Age distribution (full sample)")+
theme_bw()
ds %>% drop_na(age)%>%
ggplot(aes(x = age))+
geom_histogram(color = "black",
fill = "gray",
bins = 50)+
labs(x = "Age",
y = "Frequency",
title = "Age distribution by country")+
facet_wrap(~Country, nrow = 2)+
theme_bw()
summary(dsgmb$age)
summary(dspak$age)
summary(dstza$age)
summary(dsuga$age)
summary(dsgmb$age)
summary(dspak$age)
summary(dstza$age)
summary(dsuga$age)
### Gender proportions:
prop.table(table(dsgmb$gender))
prop.table(table(dspak$gender))
prop.table(table(dstza$gender))
prop.table(table(dsuga$gender))
lp02 <- ds %>%
drop_na(gender, age) %>%
lollipop_chart(x = gender,
line_color = "black",
point_color = "black")+
labs(y = "Frequency",
x = "",
title = "Gender distribution (full sample)")+
#  facet_wrap(~Country, nrow = 2)+
theme_bw()
lp02
bp01 <- ds %>% drop_na(gender, age) %>%
ggplot(aes(y = age,
x = gender))+
geom_boxplot(fill = "grey")+
labs(y = "Age",
x = "",
title = "Age and gender distribution by country")+
facet_wrap(~Country, nrow = 2)+
coord_flip()+
theme_bw()
bp01
lp02 <- ds %>%
drop_na(gender, age) %>%
lollipop_chart(x = gender,
line_color = "black",
point_color = "black")+
labs(y = "Frequency",
x = "",
title = "Gender distribution (full sample)")+
theme_bw()
lp02
bp01 <- ds %>% drop_na(gender, age) %>%
ggplot(aes(y = age,
x = gender))+
geom_boxplot(fill = "grey")+
labs(y = "Age",
x = "",
title = "Age and gender distribution by country")+
facet_wrap(~Country, nrow = 2)+
coord_flip()+
theme_bw()
bp01
ds %>% drop_na(age)%>%
ggplot(aes(x = age))+
geom_histogram(color = "black",
fill = "gray",
bins = 50)+
labs(x = "Age",
y = "Frequency",
title = "Age distribution by country")+
facet_wrap(~Country, nrow = 2)+
theme_bw()
lp02 <- ds %>%
drop_na(gender, age) %>%
lollipop_chart(x = gender,
line_color = "black",
point_color = "black")+
labs(y = "Frequency",
x = "",
title = "Gender distribution (full sample)")+
theme_bw()
lp02
bp01 <- ds %>% drop_na(gender, age) %>%
ggplot(aes(y = age,
x = gender))+
geom_boxplot(fill = "grey")+
labs(y = "Age",
x = "",
title = "Age and gender distribution by country")+
facet_wrap(~Country, nrow = 2)+
coord_flip()+
theme_bw()
bp01
ds %>% drop_na(ses) %>%
lollipop_chart(x = ses,
line_color = "black",
point_color = "black")+
labs(y = "Frequency",
x = "",
title = "Socioeconomic status (full sample)")+
theme_bw()
sesgmb <- dsgmb %>% drop_na(ses) %>%
lollipop_chart(x = ses,
line_color = "black",
point_color = "black")+
labs(y = "Frequency",
x = "",
title = "Gambia")+
theme_bw()
sesgmb <- dsgmb %>% drop_na(ses) %>%
lollipop_chart(x = ses,
line_color = "black",
point_color = "black")+
labs(y = "Frequency",
x = "",
title = "Gambia")+
theme_bw()
sespak <- dspak %>% drop_na(ses) %>%
lollipop_chart(x = ses,
line_color = "black",
point_color = "black")+
labs(y = "Frequency",
x = "",
title = "Pakistan")+
theme_bw()
sestza <- dstza %>% drop_na(ses) %>%
lollipop_chart(x = ses,
line_color = "black",
point_color = "black")+
labs(y = "Frequency",
x = "",
title = "Tanzania")+
theme_bw()
sesuga <- dsuga %>% drop_na(ses) %>%
lollipop_chart(x = ses,
line_color = "black",
point_color = "black")+
labs(y = "Frequency",
x = "",
title = "Uganda")+
theme_bw()
sesuga <- dsuga %>% drop_na(ses) %>%
lollipop_chart(x = ses,
line_color = "black",
point_color = "black")+
labs(y = "Frequency",
x = "",
title = "Uganda")+
theme_bw()
ds %>% drop_na(ses) %>%
lollipop_chart(x = ses,
line_color = "black",
point_color = "black")+
labs(y = "Frequency",
x = "",
title = "Socioeconomic status (full sample)")+
theme_bw()
sesgmb <- dsgmb %>% drop_na(ses) %>%
lollipop_chart(x = ses,
line_color = "black",
point_color = "black")+
labs(y = "Frequency",
x = "",
title = "Gambia")+
theme_bw()
sespak <- dspak %>% drop_na(ses) %>%
lollipop_chart(x = ses,
line_color = "black",
point_color = "black")+
labs(y = "Frequency",
x = "",
title = "Pakistan")+
theme_bw()
sestza <- dstza %>% drop_na(ses) %>%
lollipop_chart(x = ses,
line_color = "black",
point_color = "black")+
labs(y = "Frequency",
x = "",
title = "Tanzania")+
theme_bw()
sesuga <- dsuga %>% drop_na(ses) %>%
lollipop_chart(x = ses,
line_color = "black",
point_color = "black")+
labs(y = "Frequency",
x = "",
title = "Uganda")+
theme_bw()
sesplot <- (sesgmb | sespak) / (sestza | sesuga)
sesplot + plot_annotation("Socio-economic status by country")
## All four plots together:
sesplot <- (sesgmb | sespak) / (sestza | sesuga)
sesplot + plot_annotation("Socio-economic status by country")
ogp01 <- ds %>% drop_na(history_discrimination) %>%
ggplot(aes(y = history_discrimination,
x = country))+
geom_boxplot(fill = "grey")+
labs(y = "Perceived discrimination",
x = "",
title = "Perceived history of discrimination by country")+
#facet_wrap(~Country, nrow = 2)+
coord_flip()+
theme_bw()
ogp01
